#!/bin/bash
# Git commit-msg hook for Dental Clinic AI
# Validates commit message format and enforces ADR creation

COMMIT_MSG_FILE=$1
COMMIT_MSG=$(cat "$COMMIT_MSG_FILE")

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# Function to print error and exit
error_exit() {
    echo -e "${RED}‚ùå Commit rejected:${NC} $1"
    exit 1
}

# Function to print warning
warning() {
    echo -e "${YELLOW}‚ö†Ô∏è  Warning:${NC} $1"
}

# Function to print success
success() {
    echo -e "${GREEN}‚úÖ${NC} $1"
}

echo "üîç Validating commit message..."

# Check 1: Commit message format (Conventional Commits)
# Format: <type>(<scope>): <subject>
# Example: feat(agents): Add CFO agent
if ! echo "$COMMIT_MSG" | grep -qE "^(feat|fix|docs|style|refactor|test|chore|perf|ci|build|revert)(\(.+\))?: .+"; then
    error_exit "Commit message must follow Conventional Commits format:
    
    <type>(<scope>): <subject>
    
    Types: feat, fix, docs, style, refactor, test, chore, perf, ci, build, revert
    
    Examples:
    - feat(agents): Add CFO agent
    - fix(telegram): Fix webhook parsing
    - docs(adr): Add ADR-005
    
    Your message:
    $COMMIT_MSG"
fi

success "Commit message format is valid"

# Check 2: Manus-Session-ID presence (if not --no-verify)
if ! echo "$COMMIT_MSG" | grep -q "Manus-Session-ID:"; then
    warning "Commit message should include Manus-Session-ID
    
    Add to commit message body:
    
    Manus-Session-ID: [your-session-id]
    Human-Initiator: scubapro711
    
    To bypass this check, use: git commit --no-verify"
fi

# Check 3: ADR requirement for deletions
# Get list of deleted files
DELETED_FILES=$(git diff --cached --name-only --diff-filter=D)

if [ -n "$DELETED_FILES" ]; then
    echo "üóëÔ∏è  Detected file deletions:"
    echo "$DELETED_FILES"
    
    # Check if any deleted files are important (agents, core features)
    IMPORTANT_DELETIONS=$(echo "$DELETED_FILES" | grep -E "(agents/|integrations/|api/|models/)")
    
    if [ -n "$IMPORTANT_DELETIONS" ]; then
        echo -e "${YELLOW}‚ö†Ô∏è  Important files being deleted:${NC}"
        echo "$IMPORTANT_DELETIONS"
        
        # Check if commit message references an ADR
        if ! echo "$COMMIT_MSG" | grep -qiE "(ADR-[0-9]+|See ADR)"; then
            error_exit "Deleting important files requires an ADR reference.
            
            Steps:
            1. Create an ADR explaining why these files are being deleted:
               cp docs/adr/TEMPLATE.md docs/adr/ADR-XXX-your-decision.md
            
            2. Fill in the ADR with:
               - Context: Why are we deleting these files?
               - Decision: What are we doing instead?
               - Consequences: What are the effects?
            
            3. Reference the ADR in your commit message:
               
               See ADR-XXX for rationale.
            
            Or use --no-verify to bypass (not recommended)."
        fi
        
        success "ADR reference found in commit message"
    fi
fi

# Check 4: Subject line length (<72 characters)
SUBJECT_LINE=$(echo "$COMMIT_MSG" | head -n 1)
SUBJECT_LENGTH=${#SUBJECT_LINE}

if [ $SUBJECT_LENGTH -gt 72 ]; then
    warning "Subject line is $SUBJECT_LENGTH characters (recommended: <72)
    
    Consider shortening:
    $SUBJECT_LINE"
fi

# Check 5: Body line length (<80 characters)
BODY=$(echo "$COMMIT_MSG" | tail -n +3)
if [ -n "$BODY" ]; then
    while IFS= read -r line; do
        LINE_LENGTH=${#line}
        if [ $LINE_LENGTH -gt 80 ]; then
            warning "Body line exceeds 80 characters ($LINE_LENGTH):
            $line"
        fi
    done <<< "$BODY"
fi

# All checks passed
echo -e "${GREEN}‚úÖ All commit message checks passed!${NC}"
exit 0
